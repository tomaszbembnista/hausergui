/* tslint:disable */
/* eslint-disable */
/**
 * Api Documentation
 * Api Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ProcessingChainDTO
 */
export interface ProcessingChainDTO {
    /**
     * 
     * @type {number}
     * @memberof ProcessingChainDTO
     */
    id?: number;
    /**
     * 
     * @type {number}
     * @memberof ProcessingChainDTO
     */
    inputDeviceId?: number;
    /**
     * 
     * @type {number}
     * @memberof ProcessingChainDTO
     */
    nextId?: number;
    /**
     * 
     * @type {number}
     * @memberof ProcessingChainDTO
     */
    outputDeviceId?: number;
    /**
     * 
     * @type {number}
     * @memberof ProcessingChainDTO
     */
    signalProcessorId?: number;
}

export function ProcessingChainDTOFromJSON(json: any): ProcessingChainDTO {
    return ProcessingChainDTOFromJSONTyped(json, false);
}

export function ProcessingChainDTOFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProcessingChainDTO {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'inputDeviceId': !exists(json, 'inputDeviceId') ? undefined : json['inputDeviceId'],
        'nextId': !exists(json, 'nextId') ? undefined : json['nextId'],
        'outputDeviceId': !exists(json, 'outputDeviceId') ? undefined : json['outputDeviceId'],
        'signalProcessorId': !exists(json, 'signalProcessorId') ? undefined : json['signalProcessorId'],
    };
}

export function ProcessingChainDTOToJSON(value?: ProcessingChainDTO | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'inputDeviceId': value.inputDeviceId,
        'nextId': value.nextId,
        'outputDeviceId': value.outputDeviceId,
        'signalProcessorId': value.signalProcessorId,
    };
}



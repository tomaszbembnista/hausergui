/* tslint:disable */
/* eslint-disable */
/**
 * Api Documentation
 * Api Documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ProcessorOperationArgumentDesc,
    ProcessorOperationArgumentDescFromJSON,
    ProcessorOperationArgumentDescFromJSONTyped,
    ProcessorOperationArgumentDescToJSON,
} from './';

/**
 * 
 * @export
 * @interface ProcessorOperationDesc
 */
export interface ProcessorOperationDesc {
    /**
     * 
     * @type {Array<ProcessorOperationArgumentDesc>}
     * @memberof ProcessorOperationDesc
     */
    arguments?: Array<ProcessorOperationArgumentDesc>;
    /**
     * 
     * @type {string}
     * @memberof ProcessorOperationDesc
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof ProcessorOperationDesc
     */
    result?: ProcessorOperationDescResultEnum;
}

export function ProcessorOperationDescFromJSON(json: any): ProcessorOperationDesc {
    return ProcessorOperationDescFromJSONTyped(json, false);
}

export function ProcessorOperationDescFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProcessorOperationDesc {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'arguments': !exists(json, 'arguments') ? undefined : ((json['arguments'] as Array<any>).map(ProcessorOperationArgumentDescFromJSON)),
        'name': !exists(json, 'name') ? undefined : json['name'],
        'result': !exists(json, 'result') ? undefined : json['result'],
    };
}

export function ProcessorOperationDescToJSON(value?: ProcessorOperationDesc | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'arguments': value.arguments === undefined ? undefined : ((value.arguments as Array<any>).map(ProcessorOperationArgumentDescToJSON)),
        'name': value.name,
        'result': value.result,
    };
}

/**
* @export
* @enum {string}
*/
export enum ProcessorOperationDescResultEnum {
    FLOAT = 'FLOAT',
    INT = 'INT',
    STRING = 'STRING',
    DATE = 'DATE',
    FLOATLIST = 'FLOAT_LIST',
    INTLIST = 'INT_LIST',
    STRINGLIST = 'STRING_LIST',
    DATELIST = 'DATE_LIST',
    VOID = 'VOID'
}


